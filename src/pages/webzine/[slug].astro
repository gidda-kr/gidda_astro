---
import WebzineArticleLayout from '../../layouts/webzine_page.astro';
import { Remarkable } from 'remarkable';

const md = new Remarkable({
    html: true,
    typographer: true,
    linkify: true,
    footnotes: true,
});

export async function getStaticPaths() {
    const strapiUrl = 'https://strapi-app-63132904920.asia-northeast3.run.app';
    const apiPath = '/api/webzine-articles?fields=slug';

    try {
        const response = await fetch(`${strapiUrl}${apiPath}`);

        if (!response.ok) {
            console.error(`getStaticPaths API 실패: ${response.status}`);
            return [];
        }

        const jsonData = await response.json();
        const articles = jsonData.data;

        if (!articles || articles.length === 0) {
            console.warn('getStaticPaths: 데이터 없음');
            return [];
        }

        return articles.map((article) => {
            // Strapi v5 구조: attributes 없이 바로 slug 접근
            const slug = article.slug;

            if (!slug) {
                console.error('slug 없음:', article);
                return null;
            }

            return {
                params: { slug: slug },
                props: { slug: slug },
            };
        }).filter(Boolean);
    } catch (error) {
        console.error('getStaticPaths 에러:', error);
        return [];
    }
}

// props에서 slug 받기
const { slug } = Astro.props;

// 상세 데이터 가져오기 (featuredImage로 수정)
const strapiUrl = 'https://strapi-app-63132904920.asia-northeast3.run.app';
const apiPath = `/api/webzine-articles?filters[slug][$eq]=${slug}&populate=*`;

let articleEntry = null;

try {
    const response = await fetch(`${strapiUrl}${apiPath}`);

    if (!response.ok) {
        console.error(`상세 API 실패: ${response.status}`);
    } else {
        const jsonData = await response.json();

        if (jsonData.data && jsonData.data.length > 0) {
            const rawEntry = jsonData.data[0];

            // Strapi v5 구조에 맞게 데이터 추출 (attributes 없음)
            articleEntry = {
                id: rawEntry.id,
                documentId: rawEntry.documentId,
                title: rawEntry.title,
                content: rawEntry.content,
                slug: rawEntry.slug,
                publishedAt: rawEntry.publishedAt || rawEntry.publishedat,
                createdAt: rawEntry.createdAt,
                updatedAt: rawEntry.updatedAt,
                // author 처리
                author: rawEntry.author || null,
                // featuredImage 처리 - 이미 완전한 객체로 옴
                featuredImage: rawEntry.featuredImage ? {
                    url: rawEntry.featuredImage.url,
                    alt: rawEntry.featuredImage.alternativeText || rawEntry.featuredImage.name || 'Featured Image'
                } : null,
            };

            // ✨ 추가 디버깅: 최종 articleEntry 확인
        }
    }
} catch (error) {
    console.error('API 호출 에러:', error);
}

// 마크다운 처리
const htmlContent = articleEntry?.content ? md.render(articleEntry.content) : '';
---

<WebzineArticleLayout
        title={articleEntry?.title || '기사 없음'}
        author={articleEntry?.author}
        publishedAt={articleEntry?.publishedAt || ''}
        featuredImage={articleEntry?.featuredImage}
>
    <article>
        {articleEntry ? (
            articleEntry.content ? (
                    <Fragment set:html={htmlContent} />
            ) : (
                    <div>
                        <h2>본문이 준비되지 않았습니다.</h2>
                        <p>기사 ID: {articleEntry.id}</p>
                        <p>슬러그: {articleEntry.slug}</p>
                    </div>
            )
        ) : (
                <p>해당 웹진 기사를 찾을 수 없습니다.</p>
        )}
    </article>
</WebzineArticleLayout>
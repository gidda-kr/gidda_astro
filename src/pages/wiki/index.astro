---
import BaseLayout from '../../layouts/BaseLayout.astro';

// 1. Astro 빌드 시점에 Strapi API에서 위키 항목의 'title'과 'slug'만 가져옵니다.
const strapiUrl = 'https://strapi-app-63132904920.asia-northeast3.run.app';
const apiPath = '/api/wikis';
const queryParams = '?sort=publishedAt:desc&fields[0]=title&fields[1]=slug';

let wikis = [];
try {
  const response = await fetch(`${strapiUrl}${apiPath}${queryParams}`);
  const jsonData = await response.json();
  if (jsonData.data) {
    wikis = jsonData.data;
  }
} catch (error) {
  console.error('Strapi API에서 위키 목록을 가져오는 데 실패했습니다:', error);
}
---

<BaseLayout title="위키 목록">
  <div class="wiki-container">
    <article>
      <header class="page-header">
        <h1>위키</h1>
        <p class="wiki-count">총 {wikis.length}개의 위키 항목</p>
      </header>

      {wikis.length === 0 ? (
          <div class="empty-state">
            <p>아직 작성된 위키 항목이 없습니다.</p>
            <p>Strapi에서 첫 번째 글을 작성해 보세요!</p>
          </div>
      ) : (
          <ul class="wiki-list">
            {wikis.map((wiki) => (
                <li class="wiki-card">
                  {/* `wiki.slug`와 `wiki.title`을 그대로 사용합니다. */}
                  <a href={`/wiki/${wiki.slug}`}>
                    <h2>{wiki.title}</h2>
                  </a>
                </li>
            ))}
          </ul>
      )}
    </article>
  </div>
</BaseLayout>

<style>
  .wiki-container {
    max-width: 800px;
    margin: 2rem auto;
    padding: 1rem 2rem;
    font-family: 'Pretendard', -apple-system, BlinkMacSystemFont, system-ui, sans-serif;
  }

  .page-header {
    text-align: center;
    margin-bottom: 3rem;
    padding-bottom: 2rem;
    border-bottom: 1px solid #e8e8e8;
  }

  .page-header h1 {
    font-size: 2.5rem;
    font-weight: 700;
    color: #1a1a1a;
    margin-bottom: 1rem;
    letter-spacing: -0.02em;
  }

  .wiki-count {
    font-size: 1.1rem;
    color: #666;
    margin: 0;
  }

  .empty-state {
    text-align: center;
    padding: 4rem 2rem;
    color: #666;
    font-size: 1.1rem;
    line-height: 1.6;
  }

  /* --- 💡 1. 컨테이너 변경: grid -> column --- */
  .wiki-list {
    list-style: none;
    padding: 0;
    margin-top: 2rem;
    /* 여러 열을 만듭니다. */
    column-count: 3;
    /* 열 사이의 간격을 설정합니다. */
    column-gap: 1.25rem;
  }

  /* --- 💡 2. 카드 변경: 정사각형 -> 유동 높이 --- */
  .wiki-card {
    /* aspect-ratio를 제거하여 내용에 따라 높이가 결정되게 합니다. */
    border-radius: 12px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.07);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    border: 1px solid rgba(0, 0, 0, 0.05);
    overflow: hidden;
    position: relative;
    background: white;
    /* 카드가 열 사이에서 잘리는 것을 방지합니다. */
    break-inside: avoid;
    /* 카드 사이의 수직 간격을 만듭니다. */
    margin-bottom: 1.25rem;
    /* column 레이아웃에 맞게 display 속성 변경 */
    display: inline-block;
    width: 100%;
  }

  .wiki-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
  }

  .wiki-card a {
    display: flex;
    text-decoration: none;
    height: 100%;
    width: 100%;
    /* 위아래 정렬 대신 상단 정렬 */
    align-items: flex-start;
    justify-content: flex-start;
    padding: 1.25rem; /* 패딩을 조금 줄여 작은 카드에 맞춤 */
    box-sizing: border-box;
    position: relative;
  }

  /* --- 💡 3. 제목 변경: 중앙 정렬 -> 왼쪽 정렬 --- */
  .wiki-card h2 {
    font-size: 1.1rem; /* 폰트 크기 조정 */
    font-weight: 600;
    line-height: 1.4;
    text-align: left; /* 왼쪽 정렬 */
    color: #2a2a2a;
    margin: 0;
    word-break: keep-all;
    letter-spacing: -0.01em;

    /* 줄 제한은 이제 불필요하므로 제거하거나 유지할 수 있습니다. */
    /* display: -webkit-box; ... */
  }

  /* --- 💡 4. 반응형 디자인: column-count 조정 --- */
  @media (max-width: 768px) {
    .wiki-container {
      padding: 1rem;
      margin: 1rem auto;
    }
    .wiki-list {
      column-count: 2; /* 태블릿에서는 2열 */
      column-gap: 1rem;
    }
    .wiki-card {
      margin-bottom: 1rem;
    }
  }

  @media (max-width: 480px) {
    .wiki-list {
      column-count: 1; /* 모바일에서는 1열 */
    }
  }
</style>
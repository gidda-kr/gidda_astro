---
export interface Props {
    title: string;
    description?: string;
    image?: string;
    url?: string;
    type?: string;
}

const {
    title,
    description = "긷다",
    image = "/default-og-image.jpg",
    url = Astro.url.href,
    type = "website"
} = Astro.props;
---

<!doctype html>
<html lang="ko">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content={description} />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content={type} />
    <meta property="og:url" content={url} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={image} />
    <meta property="og:image:width" content="1200" />
    <meta property="og:image:height" content="630" />
    <meta property="og:site_name" content="긷다" />
    <meta property="og:locale" content="ko_KR" />

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={url} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={image} />

    <title>{title}</title>

    <!-- Google Tag Manager -->
    <script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
            new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
        j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
        'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
    })(window,document,'script','dataLayer','GTM-WT36B8Z9');</script>
    <!-- End Google Tag Manager -->

    <style is:global>
        /* --- 모든 페이지에 적용되는 전역 스타일 --- */
        body {
            font-family: Arial, sans-serif;
            line-height: 1.6;
            margin: 0;
            padding: 0;
            background-color: #fbf8f0; /* 배경색을 종이 질감에 가까운 색상으로 변경 */
            color: #333230;
            display: flex;
            flex-direction: column;
            min-height: 100vh;
        }
        main {
            flex: 1;
            /* --- main의 배경색을 누런 종이 질감으로 변경 --- */
            background-color: #f4f0e5;
        }
        a {
            color: #4CAF50; /* 링크 색상을 더 밝은 녹색으로 조정 */
            text-decoration: none;
        }
        a:hover {
            text-decoration: none;
            color: #388E3C; /* 마우스 올렸을 때 더 진하게 */
        }
        /* --- 푸터 스타일 --- */
        footer {
            background-color: #355E3B;
            color: #fff;
            padding: 1.5rem;
            text-align: center;
            margin-top: auto;
        }
        /* --- 상단 메뉴 스타일 --- */
        .site-header {
            background-color: #f4f0e5;
            padding: 1.5rem 2rem;
            position: relative;
        }

        /* 로고 스타일 */
        .site-logo {
            position: absolute;
            left: 2rem;
            top: 1.5rem; /* 헤더 패딩과 동일한 간격 */
        }

        .site-logo a {
            display: block;
            text-decoration: none;
        }

        .site-logo svg {
            height: 40px;
            width: auto;
        }

        /* 데스크톱 네비게이션 - 로고와 동일한 높이에 배치 */
        .main-nav {
            text-align: center;
            position: relative;
            top: 1.5rem; /* 로고와 동일한 위치 */
            height: 0px; /* 로고와 동일한 높이 */
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .main-nav a {
            margin: 0 1.5rem;
            font-weight: bold;
            font-size: 1.1rem;
            color: #333230;
        }
        .main-nav a:hover {
            color: #355E3B; /* 마우스 올렸을 때 짙은 초록색으로 변경 */
            text-decoration: none; /* 밑줄 효과는 제거 */
        }

        /* 햄버거 메뉴 버튼 */
        .mobile-menu-toggle {
            display: none;
            background: none;
            border: none;
            font-size: 1.5rem;
            color: #333230;
            cursor: pointer;
            padding: 0.5rem;
            position: absolute;
            right: 2rem;
            top: 1.5rem; /* 헤더 패딩과 동일한 간격 */
        }

        .mobile-menu-toggle:hover {
            color: #355E3B;
        }

        /* 햄버거 아이콘 */
        .hamburger {
            display: flex;
            flex-direction: column;
            width: 20px;
            height: 15px;
            justify-content: space-between;
        }

        .hamburger span {
            display: block;
            height: 2px;
            width: 100%;
            background-color: currentColor;
            transition: all 0.3s ease;
        }

        /* 햄버거 애니메이션 */
        .mobile-menu-toggle.active .hamburger span:nth-child(1) {
            transform: rotate(45deg) translate(5px, 5px);
        }

        .mobile-menu-toggle.active .hamburger span:nth-child(2) {
            opacity: 0;
        }

        .mobile-menu-toggle.active .hamburger span:nth-child(3) {
            transform: rotate(-45deg) translate(7px, -6px);
        }

        /* 모바일 메뉴 */
        .mobile-nav {
            display: none;
            position: absolute;
            top: 100%;
            left: 0;
            right: 0;
            background-color: #f4f0e5;
            border-top: 1px solid #e0e0e0;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            z-index: 100;
        }

        .mobile-nav.active {
            display: block;
        }

        .mobile-nav a {
            display: block;
            padding: 1rem 2rem;
            color: #333230;
            font-weight: bold;
            font-size: 1.1rem;
            border-bottom: 1px solid #e0e0e0;
            transition: background-color 0.2s ease;
        }

        .mobile-nav a:hover {
            background-color: #e8e4d9;
            color: #355E3B;
        }

        .mobile-nav a:last-child {
            border-bottom: none;
        }

        /* 반응형 - 768px 이하에서 햄버거 메뉴 활성화 */
        @media (max-width: 768px) {
            .site-header {
                padding: 1rem 2rem;
            }

            .site-logo {
                top: 1rem; /* 모바일 헤더 패딩과 정확히 동일 */
            }

            .mobile-menu-toggle {
                display: block;
                top: 1rem; /* 로고와 정확히 동일한 위치 */
            }

            .main-nav {
                display: none;
            }
        }

        #scrollToTopBtn {
            display: none; /* 기본적으로 숨겨둡니다 */
            position: fixed; /* 스크롤해도 제자리에 고정 */
            bottom: 2rem; /* 화면 하단에서 2rem */
            right: 2rem; /* 화면 오른쪽에서 2rem */
            z-index: 99; /* 다른 요소 위에 표시 */
            border: none;
            outline: none;
            background-color: #355E3B; /* 푸터와 동일한 색상 */
            color: white;
            cursor: pointer;
            padding: 1rem 1.2rem;
            border-radius: 50%; /* 원 모양 */
            font-size: 1.5rem;
            font-weight: bold;
            line-height: 1;
            opacity: 0.8;
            transition: opacity 0.3s, transform 0.3s;
        }
        #scrollToTopBtn:hover {
            opacity: 1;
            transform: scale(1.1); /* 마우스 올리면 살짝 커짐 */
        }
    </style>
</head>
<body>
<!-- Google Tag Manager (noscript) -->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-WT36B8Z9"
                  height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->
<header class="site-header">
    <!-- 로고 -->
    <div class="site-logo">
        <a href="/" aria-label="긷다 홈으로">
            <svg width="160" height="50" viewBox="0 0 160 50" fill="none" xmlns="http://www.w3.org/2000/svg">
                <style>
                    .logo-text {
                        font-family: 'Noto Sans KR', 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo', 'Malgun Gothic', 'Pretendard', sans-serif;
                        font-weight: 700;
                        font-size: 32px;
                        fill: #355E3B;
                        letter-spacing: -0.02em;
                    }
                </style>
                <text x="0" y="35" class="logo-text">긷다</text>
            </svg>
        </a>
    </div>

    <!-- 데스크톱 네비게이션 -->
    <nav class="main-nav">
        <a href="/wiki">위키</a>
        <a href="/webzine">웹진</a>
        <a href="/about">소개</a>
    </nav>

    <!-- 모바일 햄버거 버튼 -->
    <button class="mobile-menu-toggle" id="mobileMenuToggle" aria-label="메뉴 열기">
        <div class="hamburger">
            <span></span>
            <span></span>
            <span></span>
        </div>
    </button>

    <!-- 모바일 네비게이션 -->
    <nav class="mobile-nav" id="mobileNav">
        <a href="/">홈</a>
        <a href="/wiki">위키</a>
        <a href="/webzine">웹진</a>
        <a href="/about">소개</a>
    </nav>
</header>

<main>
    <slot />
</main>

<button id="scrollToTopBtn" title="페이지 맨 위로">↑</button>

<script is:inline>
    // JavaScript: 스크롤 감지 및 버튼 클릭 이벤트 처리
    // ① DOMContentLoaded 이벤트 리스너: HTML 문서가 완전히 로드되면 실행됩니다.
    document.addEventListener('DOMContentLoaded', () => {
        // ② 여기서 button 요소를 찾아 'btn'이라는 변수에 할당합니다.
        const btn = document.getElementById('scrollToTopBtn');

        // 스크롤 위치에 따라 버튼을 보이거나 숨깁니다.
        window.onscroll = () => {
            // 200px 이상 스크롤했을 때 버튼을 표시합니다.
            if (document.body.scrollTop > 200 || document.documentElement.scrollTop > 200) {
                btn.style.display = 'block';
            } else {
                btn.style.display = 'none';
            }
        };

        // 버튼을 클릭했을 때 페이지 맨 위로 부드럽게 스크롤합니다.
        btn.addEventListener('click', () => {
            window.scrollTo({
                top: 0,
                behavior: 'smooth'
            });
        });

        // 모바일 메뉴 토글 기능
        const mobileMenuToggle = document.getElementById('mobileMenuToggle');
        const mobileNav = document.getElementById('mobileNav');

        mobileMenuToggle.addEventListener('click', () => {
            mobileMenuToggle.classList.toggle('active');
            mobileNav.classList.toggle('active');
        });

        // 모바일 메뉴 링크 클릭시 메뉴 닫기
        const mobileNavLinks = mobileNav.querySelectorAll('a');
        mobileNavLinks.forEach(link => {
            link.addEventListener('click', () => {
                mobileMenuToggle.classList.remove('active');
                mobileNav.classList.remove('active');
            });
        });

        // 화면 크기 변경시 모바일 메뉴 초기화
        window.addEventListener('resize', () => {
            if (window.innerWidth > 768) {
                mobileMenuToggle.classList.remove('active');
                mobileNav.classList.remove('active');
            }
        });
    });
</script>

<footer>
    <p>긷다 since 2025</p>
</footer>
</body>
</html>